import os
import torch
from torch_geometric.loader import DataLoader

def create_data_loader_from_directory(csv_directory, batch_size=32):
    """
    Function to create a DataLoader for multiple graphs from a directory containing CSV files.

    Parameters:
    - csv_directory (str): The path to the directory containing the raw CSV files.
    - num_graphs (int, optional): The number of graphs to generate (default is None, meaning all files in the directory).
    - batch_size (int): The batch size for the DataLoader (default is 32).

    Returns:
    - loader (DataLoader): The DataLoader containing multiple graphs in batches.
    """
    # List to store multiple graph data objects
    data_list = []

    # Get all CSV files in the directory
    csv_files = [f for f in os.listdir(csv_directory) if f.endswith('.csv')]

    # Iterate over all CSV files in the directory and create graphs
    for file_name in csv_files:
        file_path = os.path.join(csv_directory, file_name)

        # Create a graph for each file and add it to the list
        graph_data_i = create_single_graph_data(file_path)  # Assume this function processes each CSV file into a graph
        data_list.append(graph_data_i)

    # Initialize a DataLoader to batch multiple graphs
    loader = DataLoader(data_list, batch_size=batch_size, shuffle=True)

    # Return the DataLoader
    return loader
